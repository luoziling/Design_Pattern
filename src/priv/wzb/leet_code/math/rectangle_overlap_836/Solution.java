package priv.wzb.leet_code.math.rectangle_overlap_836;

/**
 * @author Satsuki
 * @time 2020/3/18 15:40
 * @description:
 * 矩形以列表 [x1, y1, x2, y2] 的形式表示，其中 (x1, y1) 为左下角的坐标，(x2, y2) 是右上角的坐标。
 *
 * 如果相交的面积为正，则称两矩形重叠。需要明确的是，只在角或边接触的两个矩形不构成重叠。
 *
 * 给出两个矩形，判断它们是否重叠并返回结果。
 *
 *
 *
 * 示例 1：
 *
 * 输入：rec1 = [0,0,2,2], rec2 = [1,1,3,3]
 * 输出：true
 * 示例 2：
 *
 * 输入：rec1 = [0,0,1,1], rec2 = [1,0,2,1]
 * 输出：false
 *
 *
 * 提示：
 *
 * 两个矩形 rec1 和 rec2 都以含有四个整数的列表的形式给出。
 * 矩形中的所有坐标都处于 -10^9 和 10^9 之间。
 * x 轴默认指向右，y 轴默认指向上。
 * 你可以仅考虑矩形是正放的情况。
 *
 */
public class Solution {
    public boolean isRectangleOverlap(int[] rec1, int[] rec2) {
        // 长宽相减均
        // 某个矩阵的左下角小于另一个矩阵的右下角
        // 某个矩阵的
        // y轴的下起点高于另一矩阵的上点
        // 假设矩阵2固定
        // 那么不重叠的情况分为四种
        // 矩阵1在矩阵2的左右上下
        // 左侧的情况：矩阵1在矩阵2左侧那么矩阵1的x轴最大值小于等于矩阵2的x轴最小值
        // 右侧：矩阵1在矩阵2右侧，那么矩阵1x轴最小值大于等于矩阵2x轴最大值
        // 上：矩阵1的y轴最小值大于等于矩阵2的y轴最大值
        // 下：矩阵1的y轴最大值小于等于矩阵2的y轴最小值

        return !(rec1[2]<=rec2[0]||
                rec1[0]>=rec2[2]||
                rec1[1]>=rec2[3]||
                rec1[3]<=rec2[1]
                );
    }
}
